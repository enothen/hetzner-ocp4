---
- name: Generate RHEL image using insights image builder and extract OS as a tarball
  hosts: localhost
  become: false
  gather_facts: false

  vars:
    offline_token: "{{ vault_offline_token | default(omit) }}"
    image_file: "{{ images[0]['name'] }}.qcow2"
    tar_file: "{{ images[0]['name'] }}.tar"

  pre_tasks:
    - name: Check that required variables are defined
      tags: assert
      ansible.builtin.assert:
        that:
          - images is defined
          - offline_token is defined

  tasks:
    - name: Check if image already exists on disk
      tags: filecheck
      ansible.builtin.import_role:
        name: enothen.image_builder.check_images_exist

    - name: Get refresh token
      tags: token
      ansible.builtin.import_role:
        name: enothen.image_builder.get_refresh_token

    - name: Request creation of image
      tags: request
      ansible.builtin.import_role:
        name: enothen.image_builder.request_image_creation

    - name: Verify compose finished
      tags: verify
      ansible.builtin.import_role:
        name: enothen.image_builder.verify_compose_finished

    - name: Download image
      tags: download
      ansible.builtin.import_role:
        name: enothen.image_builder.download_images
  
    - name: Run virt-customize on the image
      tags: customize
      ansible.builtin.shell: >
        virt-customize -a {{ image_file }}
        --link /usr/bin/dracut:/sbin/dracut 
        --run-command 'sed -i "s/\(# use_devicesfile =\) 1/\1 0/" /etc/lvm/lvm.conf'
      environment:
        LIBGUESTFS_BACKEND: direct

    - name: Extract tarball from qcow2
      tags: tarball
      ansible.builtin.shell:
        virt-tar-out -a {{ image_file }} / {{ tar_file  }}
      environment:
        LIBGUESTFS_BACKEND: direct

    - name: Compress tarball
      tags: tarball
      ansible.builtin.shell:
        xz {{ tar_file  }}
